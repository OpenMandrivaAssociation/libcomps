--- libcomps-libcomps-0.1.8/libcomps/src/comps_log_codes.h.omv~	2018-02-28 03:22:33.574655496 +0100
+++ libcomps-libcomps-0.1.8/libcomps/src/comps_log_codes.h	2018-02-28 03:22:46.154703932 +0100
@@ -48,29 +48,29 @@
 
 void __expand(char *str, const char *fmt, char out, ...);
 
-inline void expand0(char *str, const char *fmt, char **args, char out) {
+static inline void expand0(char *str, const char *fmt, char **args, char out) {
     (void)args;
     __expand(str, fmt, out);
 }
-inline void expand1(char *str, const char *fmt, char **args, char out) {
+static inline void expand1(char *str, const char *fmt, char **args, char out) {
     __expand(str, fmt, out, args[0]);
 }
-inline void expand2(char *str, const char *fmt, char **args, char out) {
+static inline void expand2(char *str, const char *fmt, char **args, char out) {
     __expand(str, fmt, out, args[0],
                           args[1]);
 }
-inline void expand3(char *str, const char *fmt, char **args, char out) {
+static inline void expand3(char *str, const char *fmt, char **args, char out) {
     __expand(str, fmt, out, args[0],
                            args[1],
                            args[2]);
 }
-inline void expand4(char *str, const char *fmt, char **args, char out) {
+static inline void expand4(char *str, const char *fmt, char **args, char out) {
     __expand(str, fmt, out, args[0],
                            args[1],
                            args[2],
                            args[3]);
 }
-inline void expand5(char *str, const char *fmt, char **args, char out) {
+static inline void expand5(char *str, const char *fmt, char **args, char out) {
     __expand(str, fmt, out, args[0],
                            args[1],
                            args[2],
@@ -80,10 +80,10 @@ inline void expand5(char *str, const cha
 
 void expand(char *str, const char *fmt, char **args, int len, int out);
 
-inline void expand_out(const char *fmt, char **args, int len) {
+static inline void expand_out(const char *fmt, char **args, int len) {
     expand(NULL, fmt, args, len, 1);
 }
-inline void expand_s(char *str, const char *fmt, char **args, int len) {
+static inline void expand_s(char *str, const char *fmt, char **args, int len) {
     expand(str, fmt, args, len, 0);
 }
 
--- libcomps-libcomps-0.1.8/libcomps/src/comps_objlist.h.omv~	2018-02-28 03:21:05.420319165 +0100
+++ libcomps-libcomps-0.1.8/libcomps/src/comps_objlist.h	2018-02-28 03:21:21.602376389 +0100
@@ -31,7 +31,7 @@
 
 typedef struct COMPS_ObjListIt COMPS_ObjListIt;
 
-struct COMPS_ObjListIt {
+typedef struct COMPS_ObjListIt {
     COMPS_Object *comps_obj;
     COMPS_ObjListIt *next;
 } UnfoObjListIt;
--- libcomps-libcomps-0.1.8/libcomps/src/comps_objmradix.c.omv~	2018-02-28 03:23:28.057864587 +0100
+++ libcomps-libcomps-0.1.8/libcomps/src/comps_objmradix.c	2018-02-28 03:24:20.644064803 +0100
@@ -28,7 +28,7 @@ void comps_objmrtree_data_destroy(COMPS_
     free(rtd);
 }
 
-inline void comps_objmrtree_data_destroy_v(void * rtd) {
+void comps_objmrtree_data_destroy_v(void * rtd) {
     comps_objmrtree_data_destroy((COMPS_ObjMRTreeData*)rtd);
 }
 
@@ -599,12 +599,12 @@ void comps_objmrtree_unset(COMPS_ObjMRTr
     return;
 }
 
-inline void comps_objmrtree_pair_destroy_v(void * pair) {
+void comps_objmrtree_pair_destroy_v(void * pair) {
     free(((COMPS_ObjMRTreePair *)pair)->key);
     free(pair);
 }
 
-inline COMPS_HSList* __comps_objmrtree_all(COMPS_ObjMRTree * rt, char keyvalpair) {
+static inline COMPS_HSList* __comps_objmrtree_all(COMPS_ObjMRTree * rt, char keyvalpair) {
     COMPS_HSList *to_process, *ret;
     COMPS_HSListItem *hsit, *oldit;
     size_t x;
--- libcomps-libcomps-0.1.8/libcomps/src/python/src/pycomps_sequence.c.omv~	2018-02-28 03:24:56.401200128 +0100
+++ libcomps-libcomps-0.1.8/libcomps/src/python/src/pycomps_sequence.c	2018-02-28 03:25:05.193233308 +0100
@@ -90,7 +90,7 @@ inline PyObject* list_getitem_byid(PyObj
     #undef _seq_
 }
 
-inline COMPS_Object *list_setitem_convert(PyObject *self, PyObject *item) {
+static inline COMPS_Object *list_setitem_convert(PyObject *self, PyObject *item) {
     #define _seq_ ((PyCOMPS_Sequence*)self)
     COMPS_Object *ret = NULL;
     if (!item)
